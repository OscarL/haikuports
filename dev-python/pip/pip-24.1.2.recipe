SUMMARY="The PyPA recommended tool for installing Python packages"
DESCRIPTION="Install Python packages, replacement for easy_install"
HOMEPAGE="https://pypi.python.org/pypi/pip"
COPYRIGHT="2006-2024 Python Packaging Authority"
LICENSE="Python"
REVISION="1"
SOURCE_URI="https://pypi.io/packages/source/p/pip/pip-$portVersion.tar.gz"
CHECKSUM_SHA256="e5458a0b89f2755e0ee8c0c77613fe5273e05f337907874d64f13171a898a7ff"

ARCHITECTURES="any"

PROVIDES="
	$portName = $portVersion
	"
REQUIRES="
	haiku
	"

BUILD_REQUIRES="
	haiku_devel
	"

PYTHON_VERSIONS=(3.9 3.10 3.11 3.12)
defaultVersion=3.10

for i in "${!PYTHON_VERSIONS[@]}"; do
	pythonVersion=${PYTHON_VERSIONS[$i]}
	pythonPackage=python${pythonVersion//.}

	eval "PROVIDES_${pythonPackage}=\"
		${portName}_$pythonPackage = $portVersion
		cmd:pip$pythonVersion
		\""

	# Provide non-suffixed cmd only for the default Python version
	if [ $pythonVersion = $defaultVersion ]; then
		eval "PROVIDES_$pythonPackage+=\"
			cmd:pip = $portVersion
			cmd:pip3 = $portVersion
			\""
	fi

	eval "REQUIRES_$pythonPackage=\"
		haiku
		setuptools_$pythonPackage
		cmd:python$pythonVersion
		\""
	BUILD_REQUIRES+="
		setuptools_$pythonPackage
		"
	BUILD_PREREQUIRES+="
		cmd:python$pythonVersion
		"
done

INSTALL()
{
	for i in "${!PYTHON_VERSIONS[@]}"; do
		pythonVersion=${PYTHON_VERSIONS[$i]}
		pythonPackage=python${pythonVersion//.}

		python=python$pythonVersion
		installLocation=$prefix/lib/$python/vendor-packages/
		export PYTHONPATH=$installLocation:$PYTHONPATH

		mkdir -p $installLocation
		rm -rf build

		$python setup.py build install \
			--root=/ --prefix=$prefix

		# Remove non-version suffixed commands, except for the default python version.
		if [ $pythonVersion != $defaultVersion ]; then
			rm $binDir/{pip,pip3}
		fi

		packageEntries $pythonPackage \
			$prefix/lib/python* \
			$binDir
	done
}
